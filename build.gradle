plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.graalvm.buildtools.native' version '0.9.27'
}

group = 'com.food'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation("org.mapstruct:mapstruct-processor:1.5.5.Final")
	implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")

	implementation 'org.modelmapper:modelmapper:3.0.0'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.13.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'

	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'com.h2database:h2'
	implementation 'org.postgresql:postgresql'


}

tasks.named('test') {
	useJUnitPlatform()
}


def querydslSrcDir = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
	options.getGeneratedSourceOutputDirectory().set(file(querydslSrcDir))
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs.addAll(
			List.of(
					"-Amapstruct.suppressGeneratorTimestamp=true",
					"-Amapstruct.unmappedTargetPolicy=ERROR",
					"-Amapstruct.defaultComponentModel=spring",
			),
	)
}

sourceSets {
	main {
		java {
			srcDirs += [ querydslSrcDir ]
		}
	}
}

clean {
	delete file(querydslSrcDir)
}
